cmake_minimum_required(VERSION 3.16.0 FATAL_ERROR)

set(CMAKE_SYSTEM_VERSION 10.0 CACHE STRING "" FORCE)

project(lib_mpfr C)

################################################################################
# Set target arch type if empty. Visual studio solution generator provides it.
################################################################################
if(NOT CMAKE_VS_PLATFORM_NAME)
    set(CMAKE_VS_PLATFORM_NAME "x64")
endif()
message("${CMAKE_VS_PLATFORM_NAME} architecture in use")

if(NOT ("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "Win32"
     OR "${CMAKE_VS_PLATFORM_NAME}" STREQUAL "x64"))
    message(FATAL_ERROR "${CMAKE_VS_PLATFORM_NAME} arch is not supported!")
endif()

################################################################################
# Global configuration types
################################################################################
set(CMAKE_CONFIGURATION_TYPES
    "Debug"
    "Release"
    CACHE STRING "" FORCE
)

################################################################################
# Global compiler options
################################################################################
if(MSVC)
    # remove default flags provided with CMake for MSVC
    set(CMAKE_C_FLAGS "")
    set(CMAKE_C_FLAGS_DEBUG "")
    set(CMAKE_C_FLAGS_RELEASE "")
endif()

################################################################################
# Global linker options
################################################################################
if(MSVC)
    # remove default flags provided with CMake for MSVC
    set(CMAKE_EXE_LINKER_FLAGS "")
    set(CMAKE_MODULE_LINKER_FLAGS "")
    set(CMAKE_SHARED_LINKER_FLAGS "")
    set(CMAKE_STATIC_LINKER_FLAGS "")
    set(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS}")
    set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "${CMAKE_MODULE_LINKER_FLAGS}")
    set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "${CMAKE_SHARED_LINKER_FLAGS}")
    set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "${CMAKE_STATIC_LINKER_FLAGS}")
    set(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS}")
    set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "${CMAKE_MODULE_LINKER_FLAGS}")
    set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "${CMAKE_SHARED_LINKER_FLAGS}")
    set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "${CMAKE_STATIC_LINKER_FLAGS}")
endif()

################################################################################
# Nuget packages function stub.
################################################################################
function(use_package TARGET PACKAGE VERSION)
    message(WARNING "No implementation of use_package. Create yours. "
                    "Package \"${PACKAGE}\" with version \"${VERSION}\" "
                    "for target \"${TARGET}\" is ignored!")
endfunction()

################################################################################
# Common utils
################################################################################
include(CMake/Utils.cmake)

################################################################################
# Additional Global Settings(add specific info there)
################################################################################
include(CMake/GlobalSettingsInclude.cmake OPTIONAL)

################################################################################
# Use solution folders feature
################################################################################
set_property(GLOBAL PROPERTY USE_FOLDERS ON)

################################################################################
# Sub-projects
################################################################################
add_subdirectory(bench_lib)
add_subdirectory(lib_mpfr)
add_subdirectory(lib_mpfr_tests/lib_tests)
add_subdirectory(lib_mpfr_tests/mpf_compat)
add_subdirectory(lib_mpfr_tests/mpfr_compat)
add_subdirectory(lib_mpfr_tests/reuse)
add_subdirectory(lib_mpfr_tests/tabort_defalloc1)
add_subdirectory(lib_mpfr_tests/tabort_defalloc2)
add_subdirectory(lib_mpfr_tests/tabort_prec_max)
add_subdirectory(lib_mpfr_tests/tabs)
add_subdirectory(lib_mpfr_tests/tacos)
add_subdirectory(lib_mpfr_tests/tacosh)
add_subdirectory(lib_mpfr_tests/tacosu)
add_subdirectory(lib_mpfr_tests/tadd)
add_subdirectory(lib_mpfr_tests/tadd1sp)
add_subdirectory(lib_mpfr_tests/tadd_d)
add_subdirectory(lib_mpfr_tests/tadd_ui)
add_subdirectory(lib_mpfr_tests/tagm)
add_subdirectory(lib_mpfr_tests/tai)
add_subdirectory(lib_mpfr_tests/talloc)
add_subdirectory(lib_mpfr_tests/tasin)
add_subdirectory(lib_mpfr_tests/tasinh)
add_subdirectory(lib_mpfr_tests/tasinu)
add_subdirectory(lib_mpfr_tests/tassert)
add_subdirectory(lib_mpfr_tests/tatan)
add_subdirectory(lib_mpfr_tests/tatan2u)
add_subdirectory(lib_mpfr_tests/tatanh)
add_subdirectory(lib_mpfr_tests/tatanu)
add_subdirectory(lib_mpfr_tests/taway)
add_subdirectory(lib_mpfr_tests/tbeta)
add_subdirectory(lib_mpfr_tests/tbuildopt)
add_subdirectory(lib_mpfr_tests/tcan_round)
add_subdirectory(lib_mpfr_tests/tcbrt)
add_subdirectory(lib_mpfr_tests/tcheck)
add_subdirectory(lib_mpfr_tests/tcmp)
add_subdirectory(lib_mpfr_tests/tcmp2)
add_subdirectory(lib_mpfr_tests/tcmp_d)
add_subdirectory(lib_mpfr_tests/tcmp_ld)
add_subdirectory(lib_mpfr_tests/tcmp_ui)
add_subdirectory(lib_mpfr_tests/tcmpabs)
add_subdirectory(lib_mpfr_tests/tcomparisons)
add_subdirectory(lib_mpfr_tests/tcompound)
add_subdirectory(lib_mpfr_tests/tconst_catalan)
add_subdirectory(lib_mpfr_tests/tconst_euler)
add_subdirectory(lib_mpfr_tests/tconst_log2)
add_subdirectory(lib_mpfr_tests/tconst_pi)
add_subdirectory(lib_mpfr_tests/tcopysign)
add_subdirectory(lib_mpfr_tests/tcos)
add_subdirectory(lib_mpfr_tests/tcosh)
add_subdirectory(lib_mpfr_tests/tcosu)
add_subdirectory(lib_mpfr_tests/tcot)
add_subdirectory(lib_mpfr_tests/tcoth)
add_subdirectory(lib_mpfr_tests/tcsc)
add_subdirectory(lib_mpfr_tests/tcsch)
add_subdirectory(lib_mpfr_tests/td_div)
add_subdirectory(lib_mpfr_tests/td_sub)
add_subdirectory(lib_mpfr_tests/tdigamma)
add_subdirectory(lib_mpfr_tests/tdim)
add_subdirectory(lib_mpfr_tests/tdiv)
add_subdirectory(lib_mpfr_tests/tdiv_d)
add_subdirectory(lib_mpfr_tests/tdiv_ui)
add_subdirectory(lib_mpfr_tests/tdot)
add_subdirectory(lib_mpfr_tests/teint)
add_subdirectory(lib_mpfr_tests/teq)
add_subdirectory(lib_mpfr_tests/terandom)
add_subdirectory(lib_mpfr_tests/terandom_chisq)
add_subdirectory(lib_mpfr_tests/terf)
add_subdirectory(lib_mpfr_tests/texceptions)
add_subdirectory(lib_mpfr_tests/texp)
add_subdirectory(lib_mpfr_tests/texp10)
add_subdirectory(lib_mpfr_tests/texp10m1)
add_subdirectory(lib_mpfr_tests/texp2)
add_subdirectory(lib_mpfr_tests/texp2m1)
add_subdirectory(lib_mpfr_tests/texpm1)
add_subdirectory(lib_mpfr_tests/tfactorial)
add_subdirectory(lib_mpfr_tests/tfits)
add_subdirectory(lib_mpfr_tests/tfma)
add_subdirectory(lib_mpfr_tests/tfmma)
add_subdirectory(lib_mpfr_tests/tfmod)
add_subdirectory(lib_mpfr_tests/tfms)
add_subdirectory(lib_mpfr_tests/tfpif)
add_subdirectory(lib_mpfr_tests/tfprintf)
add_subdirectory(lib_mpfr_tests/tfrac)
add_subdirectory(lib_mpfr_tests/tfrexp)
add_subdirectory(lib_mpfr_tests/tgamma)
add_subdirectory(lib_mpfr_tests/tgamma_inc)
add_subdirectory(lib_mpfr_tests/tget_d)
add_subdirectory(lib_mpfr_tests/tget_d_2exp)
add_subdirectory(lib_mpfr_tests/tget_f)
add_subdirectory(lib_mpfr_tests/tget_flt)
add_subdirectory(lib_mpfr_tests/tget_ld_2exp)
add_subdirectory(lib_mpfr_tests/tget_q)
add_subdirectory(lib_mpfr_tests/tget_set_d128)
add_subdirectory(lib_mpfr_tests/tget_set_d64)
add_subdirectory(lib_mpfr_tests/tget_sj)
add_subdirectory(lib_mpfr_tests/tget_str)
add_subdirectory(lib_mpfr_tests/tget_z)
add_subdirectory(lib_mpfr_tests/tgmpop)
add_subdirectory(lib_mpfr_tests/tgrandom)
add_subdirectory(lib_mpfr_tests/thyperbolic)
add_subdirectory(lib_mpfr_tests/thypot)
add_subdirectory(lib_mpfr_tests/tinits)
add_subdirectory(lib_mpfr_tests/tinp_str)
add_subdirectory(lib_mpfr_tests/tinternals)
add_subdirectory(lib_mpfr_tests/tisnan)
add_subdirectory(lib_mpfr_tests/tisqrt)
add_subdirectory(lib_mpfr_tests/tj0)
add_subdirectory(lib_mpfr_tests/tj1)
add_subdirectory(lib_mpfr_tests/tjn)
add_subdirectory(lib_mpfr_tests/tl2b)
add_subdirectory(lib_mpfr_tests/tlgamma)
add_subdirectory(lib_mpfr_tests/tli2)
add_subdirectory(lib_mpfr_tests/tlngamma)
add_subdirectory(lib_mpfr_tests/tlog)
add_subdirectory(lib_mpfr_tests/tlog10)
add_subdirectory(lib_mpfr_tests/tlog10p1)
add_subdirectory(lib_mpfr_tests/tlog1p)
add_subdirectory(lib_mpfr_tests/tlog2)
add_subdirectory(lib_mpfr_tests/tlog2p1)
add_subdirectory(lib_mpfr_tests/tlog_ui)
add_subdirectory(lib_mpfr_tests/tmin_prec)
add_subdirectory(lib_mpfr_tests/tminmax)
add_subdirectory(lib_mpfr_tests/tmodf)
add_subdirectory(lib_mpfr_tests/tmul)
add_subdirectory(lib_mpfr_tests/tmul_2exp)
add_subdirectory(lib_mpfr_tests/tmul_d)
add_subdirectory(lib_mpfr_tests/tmul_ui)
add_subdirectory(lib_mpfr_tests/tnext)
add_subdirectory(lib_mpfr_tests/tnrandom)
add_subdirectory(lib_mpfr_tests/tnrandom_chisq)
add_subdirectory(lib_mpfr_tests/tout_str)
add_subdirectory(lib_mpfr_tests/toutimpl)
add_subdirectory(lib_mpfr_tests/tpow)
add_subdirectory(lib_mpfr_tests/tpow3)
add_subdirectory(lib_mpfr_tests/tpow_all)
add_subdirectory(lib_mpfr_tests/tpow_z)
add_subdirectory(lib_mpfr_tests/tpowr)
add_subdirectory(lib_mpfr_tests/tprec_round)
add_subdirectory(lib_mpfr_tests/tprintf)
add_subdirectory(lib_mpfr_tests/trandom)
add_subdirectory(lib_mpfr_tests/trandom_deviate)
add_subdirectory(lib_mpfr_tests/trec_sqrt)
add_subdirectory(lib_mpfr_tests/tremquo)
add_subdirectory(lib_mpfr_tests/trint)
add_subdirectory(lib_mpfr_tests/trndna)
add_subdirectory(lib_mpfr_tests/troot)
add_subdirectory(lib_mpfr_tests/trootn_ui)
add_subdirectory(lib_mpfr_tests/tsec)
add_subdirectory(lib_mpfr_tests/tsech)
add_subdirectory(lib_mpfr_tests/tset)
add_subdirectory(lib_mpfr_tests/tset_d)
add_subdirectory(lib_mpfr_tests/tset_exp)
add_subdirectory(lib_mpfr_tests/tset_f)
add_subdirectory(lib_mpfr_tests/tset_float128)
add_subdirectory(lib_mpfr_tests/tset_ld)
add_subdirectory(lib_mpfr_tests/tset_q)
add_subdirectory(lib_mpfr_tests/tset_si)
add_subdirectory(lib_mpfr_tests/tset_sj)
add_subdirectory(lib_mpfr_tests/tset_str)
add_subdirectory(lib_mpfr_tests/tset_z)
add_subdirectory(lib_mpfr_tests/tset_z_2exp)
add_subdirectory(lib_mpfr_tests/tsgn)
add_subdirectory(lib_mpfr_tests/tsi_op)
add_subdirectory(lib_mpfr_tests/tsin)
add_subdirectory(lib_mpfr_tests/tsin_cos)
add_subdirectory(lib_mpfr_tests/tsinh)
add_subdirectory(lib_mpfr_tests/tsinh_cosh)
add_subdirectory(lib_mpfr_tests/tsinu)
add_subdirectory(lib_mpfr_tests/tsprintf)
add_subdirectory(lib_mpfr_tests/tsqr)
add_subdirectory(lib_mpfr_tests/tsqrt)
add_subdirectory(lib_mpfr_tests/tsqrt_ui)
add_subdirectory(lib_mpfr_tests/tstckintc)
add_subdirectory(lib_mpfr_tests/tstdint)
add_subdirectory(lib_mpfr_tests/tstrtofr)
add_subdirectory(lib_mpfr_tests/tsub)
add_subdirectory(lib_mpfr_tests/tsub1sp)
add_subdirectory(lib_mpfr_tests/tsub_d)
add_subdirectory(lib_mpfr_tests/tsub_ui)
add_subdirectory(lib_mpfr_tests/tsubnormal)
add_subdirectory(lib_mpfr_tests/tsum)
add_subdirectory(lib_mpfr_tests/tswap)
add_subdirectory(lib_mpfr_tests/ttan)
add_subdirectory(lib_mpfr_tests/ttanh)
add_subdirectory(lib_mpfr_tests/ttanu)
add_subdirectory(lib_mpfr_tests/ttotal_order)
add_subdirectory(lib_mpfr_tests/ttrunc)
add_subdirectory(lib_mpfr_tests/tui_div)
add_subdirectory(lib_mpfr_tests/tui_pow)
add_subdirectory(lib_mpfr_tests/tui_sub)
add_subdirectory(lib_mpfr_tests/turandom)
add_subdirectory(lib_mpfr_tests/tvalist)
add_subdirectory(lib_mpfr_tests/tversion)
add_subdirectory(lib_mpfr_tests/ty0)
add_subdirectory(lib_mpfr_tests/ty1)
add_subdirectory(lib_mpfr_tests/tyn)
add_subdirectory(lib_mpfr_tests/tzeta)
add_subdirectory(lib_mpfr_tests/tzeta_ui)
add_subdirectory(timing)
add_subdirectory(tuneup)

